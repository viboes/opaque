# Boost Chrono Library test Jamfile

# Copyright Vicente Botet 2010

# Distributed under the Boost Software License, Version 1.0.
# See accompanying file LICENSE_1_0.txt or http://www.boost.org/LICENSE_1_0.txt

# See library home page at http://www.boost.org/libs/opaque

# uncomment one if the above lines if you build outside the Boost release
#local BOOST_ROOT = /boost_1_41_0 ;
#local BOOST_ROOT = c:/cygwin/boost_1_41_0 ;

if ! $(BOOST_ROOT)
{
    BOOST_ROOT = [ modules.peek : BOOST_ROOT ] ;
}

project
    : requirements
        <library>/boost/test//boost_unit_test_framework/<link>static
        
        # uncomment the line above if you build outside the Boost release
        #<include>$(BOOST_ROOT) 
        # uncomment the line above if you build outside the Boost release
        #<include>../../..
#        <toolset>msvc:<asynch-exceptions>on
        <define>BOOST_ENABLE_WARNINGS
        <define>BOOST_RATIO_USES_MPL_ASSERT
        <warnings>all
        <toolset>gcc:<cxxflags>-Wextra
        <toolset>gcc:<cxxflags>-Wno-long-long        
        <toolset>gcc-mingw-4.5.0:<cxxflags>-Wno-missing-field-initializers        
        <toolset>gcc-mingw-4.5.0:<cxxflags>-fdiagnostics-show-option
        <toolset>msvc:<cxxflags>/wd4127
    ;

   test-suite "new"
        :
        [ run new_type_test.cpp ]
        [ run new_class_test.cpp ]
        ;

   test-suite "opaque"
        :
        [ run test.cpp ]
        ;

   test-suite "public"
        :
        [ run public_opaque_test.cpp ]
        [ run multi_level_conversion.cpp ]
        ;

   test-suite "private"
        :
        [ run private_opaque_test.cpp ]
        [ compile-fail private_opaque_explicit_conversion_fail.cpp ]
        
        ;

   test-suite "compile_fail"
        :
        [ compile-fail add_siblings_fail.cpp ]
        [ compile-fail assign_siblings_fail.cpp ]
        [ compile-fail add_pub_siblings_fail.cpp ]
        [ compile-fail assign_pub_siblings_fail.cpp ]
        ;

